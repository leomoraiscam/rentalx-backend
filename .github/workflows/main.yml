name: CI
 
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USERNAME: postgres
          POSTGRES_DB: postgres

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js Environment
        uses: actions/setup-node@v2
        with:
          node-version: 12.x
          
      - name: Install Depedencies 
        run: yarn

      - name: Create Database Test
        run: yarn seed:db:test

        env:
          PG_HOST_TEST: localhost
          PG_PORT_TEST: 5432 
          PG_PASSWORD_TEST: postgres
          PG_USERNAME_TEST: postgres
          PG_DATABASE_TEST: postgres

      - name: Run Build
        run: yarn build

      - name: Run Test
        run: yarn test

        env:
          PG_HOST_TEST: localhost
          PG_PORT_TEST: 5432 
          PG_PASSWORD_TEST: postgres
          PG_USERNAME_TEST: postgres
          PG_DATABASE_TEST: rentx_test

      - name: Copy dist to AWS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{secrets.SSH_KEY}}
          source: ".,!node_modules"
          target: "~/repositories/rentalx-backend"

      - name: Install dependences on AWS 
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{secrets.SSH_KEY}}
          script: |
            cd ~/repositories/rentalx-backend
            yarn 
      
      - name: Run migrations on AWS and production script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{secrets.SSH_KEY}}
          script: |
            cd ~/repositories/rentalx-backend
            yarn
            yarn typeorm migration:run
            pm2 restart rentx
